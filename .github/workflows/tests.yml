name: tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: "0 0 * * 6" # Every Saturday

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - run: pnpm install
      - run: pnpm turbo run test

  test-typesafety:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: pnpm
      - run: pnpm install
      - run: pnpm run typecheck

  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.21
      - run: pnpm install
      - run: pnpm run build

  test-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2 # Comparing with the base branch
      # See: https://turborepo.com/docs/reference/run#--affected for more information about the --affected flag
      - name: Set Turbo base/head for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "TURBO_SCM_BASE=${{ github.event.pull_request.base.sha || github.event.before }}" >> $GITHUB_ENV
          echo "TURBO_SCM_HEAD=${{ github.sha }}" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: lts/*
          cache: pnpm
      - run: pnpm install
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
      - name: Run E2E (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: pnpm run test:e2e --affected
      - name: Run E2E (main)
        if: ${{ github.event_name != 'pull_request' }}
        run: pnpm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results-e2e
          path: "**/test-results/**"
          retention-days: 30
  test-windows:
    if: github.event_name == 'schedule' || contains(join(github.event.pull_request.labels.*.name, ','), 'windows')
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
    continue-on-error: ${{ matrix.node-version == 'latest' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2 # Comparing with the base branch
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - run: pnpm install
      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: windows-latest-pw-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: windows-latest-pw-
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
      - run: pnpm build
      - run: pnpm turbo run test
      - run: pnpm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results-windows-${{ matrix.node-version }}
          path: "**/test-results/**"
          retention-days: 30

  test-macos:
    if: github.event_name == 'schedule' || contains(join(github.event.pull_request.labels.*.name, ','), 'macos')
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
    continue-on-error: ${{ matrix.node-version == 'latest' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2 # Comparing with the base branch
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - run: pnpm install
      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: macos-latest-pw-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: macos-latest-pw-
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
      - run: pnpm build
      - run: pnpm turbo run test
      - run: pnpm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results-macos-${{ matrix.node-version }}
          path: "**/test-results/**"
          retention-days: 30
