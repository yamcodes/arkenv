name: tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# Workflow-level concurrency control - cancels previous runs when new commits arrive
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  resolve-playwright-version:
    name: Resolve Playwright version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.out.outputs.version }}
    steps:
      - uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: pnpm

      # Install dependencies to ensure node_modules/@playwright/test exists
      - name: Install dependencies
        env:
          # do not download browsers here
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
        run: pnpm install --frozen-lockfile

      - name: Read @playwright/test version
        id: out
        run: |
          VER=$(node -e "console.log(require(require.resolve('@playwright/test/package.json')).version)")
          echo "version=$VER" >> "$GITHUB_OUTPUT"
  test:
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [22, lts/*, latest]
        # See: https://github.com/fuma-nama/fumadocs/issues/2456
      fail-fast: false

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run test
        run: pnpm turbo run test

  test-typesafety:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run typecheck
        run: pnpm run typecheck

  test-build:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22, lts/*, latest]

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.21

      - name: Install dependencies
        run: pnpm install

      - name: Run build
        run: pnpm run build

  test-e2e:
    name: Test E2E
    needs: resolve-playwright-version
    timeout-minutes: 10
    runs-on: ubuntu-latest

    env:
      HOME: /root
      CI: true
      PLAYWRIGHT_TIMEOUT: 300000
      PLAYWRIGHT_HEADLESS: true
      # ensure pnpm install does not try to fetch browsers in the container either
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"

    container:
      image: mcr.microsoft.com/playwright:v${{ needs.resolve-playwright-version.outputs.version }}-noble
      options: --user 1001

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2

      # Set Turbo base/head for PRs, see: https://turborepo.com/docs/reference/run#--affected
      - name: Set Turbo base/head for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "TURBO_SCM_BASE=${{ github.event.pull_request.base.sha || github.event.before }}" >> $GITHUB_ENV
          echo "TURBO_SCM_HEAD=${{ github.sha }}" >> $GITHUB_ENV

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js 
        uses: actions/setup-node@v5
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run E2E (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: pnpm run test:e2e --affected
        env:
          TURBO_LOG: info
          DEBUG: pw:api

      # Pushes to main - run everything
      - name: Run E2E (main)
        if: ${{ github.event_name != 'pull_request' }}
        run: pnpm run test:e2e
        env:
          DEBUG: pw:api

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results
          path: |
            **/test-results/**
          retention-days: 30
